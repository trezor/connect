name: Karma Chrome

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]

jobs:
  setup:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: node_modules
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - run: yarn install


  check:
    needs: setup
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
    - run: yarn flow
    - run: yarn lint
    - run: yarn build
    - run: yarn build:inline
    - name: Save artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-artifact
        path: build
        if-no-files-found: error
        retention-days: 1

  management:
    needs: check
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
    - name: Retrieve artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-artifact
        path: build
    # xvfb is required to run karma 
    - run: sudo apt-get install xvfb
    - run: xvfb-run --auto-servernum ./tests/run.sh -s 'yarn test:karma:production' -i applySettings,applyFlags,getFeatures

  btc-sign:
    needs: check
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
    - name: Retrieve artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-artifact
        path: build
    # xvfb is required to run karma 
    - run: sudo apt-get install xvfb
    - run: xvfb-run --auto-servernum ./tests/run.sh -s 'yarn test:karma:production' -i signTransaction

  btc-others:
    needs: check
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
    - name: Retrieve artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-artifact
        path: build
    # xvfb is required to run karma 
    - run: sudo apt-get install xvfb
    - run: xvfb-run --auto-servernum ./tests/run.sh -s 'yarn test:karma:production' -i getAccountInfo,getAddress,getPublicKey,signMessage,verifyMessage

  stellar:
    needs: check
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
    - name: Retrieve artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-artifact
        path: build
    # xvfb is required to run karma 
    - run: sudo apt-get install xvfb
    - run: xvfb-run --auto-servernum ./tests/run.sh -s 'yarn test:karma:production' -i stellarGetAddress,stellarSignTransaction

  cardano:
    needs: check
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
    - name: Retrieve artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-artifact
        path: build
    # xvfb is required to run karma 
    - run: sudo apt-get install xvfb
    - run: xvfb-run --auto-servernum ./tests/run.sh -s 'yarn test:karma:production' -i cardanoGetAddress,cardanoGetPublicKey,cardanoSignTransaction

  eos:
    needs: check
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
    - name: Retrieve artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-artifact
        path: build
    # xvfb is required to run karma 
    - run: sudo apt-get install xvfb
    - run: xvfb-run --auto-servernum ./tests/run.sh -s 'yarn test:karma:production' -i eosGetPublicKey,eosSignTransaction

  eth:
    needs: check
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
    - name: Retrieve artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-artifact
        path: build
    # xvfb is required to run karma 
    - run: sudo apt-get install xvfb
    - run: xvfb-run --auto-servernum ./tests/run.sh -s 'yarn test:karma:production' -i ethereumGetAddress,ethereumGetPublicKey,ethereumSignMessage,ethereumSignTransaction,ethereumVerifyMessage

  nem:
    needs: check
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
    - name: Retrieve artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-artifact
        path: build
    # xvfb is required to run karma 
    - run: sudo apt-get install xvfb
    - run: xvfb-run --auto-servernum ./tests/run.sh -s 'yarn test:karma:production' -i nemGetAddress,nemSignTransaction

  ripple:
    needs: check
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
    - name: Retrieve artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-artifact
        path: build
    # xvfb is required to run karma 
    - run: sudo apt-get install xvfb
    - run: xvfb-run --auto-servernum ./tests/run.sh -s 'yarn test:karma:production' -i rippleGetAddress,rippleSignTransaction

  tezos:
    needs: check
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
    - name: Retrieve artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-artifact
        path: build
    # xvfb is required to run karma 
    - run: sudo apt-get install xvfb
    - run: xvfb-run --auto-servernum ./tests/run.sh -s 'yarn test:karma:production' -i tezosGetAddress,tezosGetPublicKey

  binance:
    needs: check
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
    - name: Retrieve artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-artifact
        path: build
    # xvfb is required to run karma 
    - run: sudo apt-get install xvfb
    - run: xvfb-run --auto-servernum ./tests/run.sh -s 'yarn test:karma:production' -i binanceSignTransaction
