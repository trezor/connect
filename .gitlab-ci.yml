image: registry.gitlab.com/satoshilabs/trezor/trezor-user-env/trezor-user-env:latest

stages:
  - build
  - test
  - deploy

before_script:
  - nix-shell --run "yarn"

verify:
  stage: build
  script:
    - nix-shell --run "yarn test:health"
    - nix-shell --run "yarn flow"
    - nix-shell --run "yarn typescript"
    - nix-shell --run "yarn lint"
    - nix-shell --run "yarn test:unit"

build:
  stage: build
  script:
    - nix-shell --run "make build-connect"
  artifacts:
    expire_in: 1 week
    paths:
      - build

# Deploy
deploy review:
  stage: deploy
  variables:
    GIT_STRATEGY: none
  when: manual
  needs: ["build"]
  environment:
    name: $CI_BUILD_REF_NAME
    url: $BASE_REVIEW_URL/$CI_BUILD_REF_NAME
  before_script: []
  script:
    - echo "Deploy a review app"
    - '[ -z "${DEPLOY_BASE_DIR}" ] && echo "Deploy base dir cannot be empty" && exit 255'
    - env
    - mkdir -p "${DEPLOY_BASE_DIR}/${CI_BUILD_REF_NAME}"
    - echo "Copy dev build to web server ${DEPLOY_BASE_DIR}/${CI_BUILD_REF_NAME}..."
    - rsync --delete -va build/ "${DEPLOY_BASE_DIR}/${CI_BUILD_REF_NAME}/"
  only:
    - branches
  tags:
    - deploy

# Test
.test:
  stage: test
  needs: ["build"]
  variables:
    SDL_VIDEODRIVER: "dummy"
    TESTS_FIRMWARE: "2-master"
    TESTS_USE_TX_CACHE: "false"
    TESTS_USE_WS_CACHE: "false"
  script:
    - "echo Firmware version: $TESTS_FIRMWARE"
    - /trezor-user-env/run.sh &
    - nix-shell --run "yarn test:integration --coverage true"

test management:
  extends: .test
  variables:
    TESTS_INCLUDED_METHODS: "applySettings,applyFlags,getFeatures"

test btc sign:
  extends: .test
  variables:
    TESTS_INCLUDED_METHODS: "signTransaction"

test btc others:
  extends: .test
  variables:
    TESTS_INCLUDED_METHODS: "getAccountInfo,getAddress,getPublicKey,signMessage,verifyMessage"

test stellar:
  extends: .test
  variables:
    TESTS_INCLUDED_METHODS: "stellarGetAddress,stellarSignTransaction"

test cardano:
  extends: .test
  variables:
    TESTS_INCLUDED_METHODS: "cardanoGetAddress,cardanoGetPublicKey,cardanoSignTransaction"

test eos:
  extends: .test
  variables:
    TESTS_INCLUDED_METHODS: "eosGetPublicKey,eosSignTransaction"

test eth:
  extends: .test
  variables:
    TESTS_INCLUDED_METHODS: "ethereumGetAddress,ethereumGetPublicKey,ethereumSignMessage,ethereumSignTransaction,ethereumVerifyMessage"

test nem:
  extends: .test
  variables:
    TESTS_INCLUDED_METHODS: "nemGetAddress,nemSignTransaction"

test ripple:
  extends: .test
  variables:
    TESTS_INCLUDED_METHODS: "rippleGetAddress,rippleSignTransaction"

test tezos:
  extends: .test
  variables:
    TESTS_INCLUDED_METHODS: "tezosGetAddress,tezosGetPublicKey"

test binance:
  extends: .test
  variables:
    TESTS_INCLUDED_METHODS: "binanceSignTransaction"

test lisk:
  extends: .test
  variables:
    TESTS_INCLUDED_METHODS: "liskGetAddress,liskSignMessage,liskSignTransaction,liskVerifyMessage"
